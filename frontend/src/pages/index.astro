---
import Layout from '../layouts/Layout.astro';
import { craftClient } from '../lib/graphql';
import { getPreviewStatus, PreviewScript } from '../lib/preview';
import { HOME_QUERY } from '../queries/home.mjs';
import ContentBlocks from '../components/ContentBlocks.astro';
import LinkButton from '../components/LinkButton.astro';
import Notification from '../components/Notification.astro';



const preview = getPreviewStatus(Astro.url);

const data = await craftClient.query(HOME_QUERY, {}, {
  previewToken: preview.token
});

const entry = data?.entry;
const siteName = import.meta.env.SITE_NAME || 'Site';
const pageTitle = entry?.title ? `${entry.title} | ${siteName}` : siteName;
---

<Layout title={pageTitle}>
  <main>

    <header class="pageHeader">
      {entry?.image?.[0] && (
        <figure>
          <img src={entry.image[0].url} alt={entry.image[0].alt} />
        </figure>
      )}
  
      <div>
        <h1 class="">{entry?.title}</h1>
        {entry?.pageSubheading && (
          <p class="">{entry.pageSubheading}</p>
        )}
      </div>
    </header>

    <div class="test">
      <LinkButton type="primary" size="large" href="#">
        Click me
      </LinkButton>

      <LinkButton type="secondary" icon="icon-success" iconPosition="end" text="With Icon" />
      <LinkButton type="primary" icon="icon-info" size="small" iconPosition="start" text="With Icon" />
      <LinkButton type="primary" icon="icon-info" size="medium" iconPosition="start" text="With Icon" />
      <LinkButton type="primary" icon="icon-info" size="large" iconPosition="start" text="With Icon" />
      
    </div>

    <div class="test">

      <Notification
        type="info"
        title="Information"
        text="This is an informational message."
      />
    </div>

    {entry?.pageContent?.chunks && (
      <div class="pageContent prose">
        <ContentBlocks chunks={entry.pageContent.chunks} />
      </div>
    )}

  </main>
</Layout>

<Fragment set:html={PreviewScript({ isPreview: preview.isPreview })} />

<style scoped>
  :where(main) {
    display: grid;
    grid-template-columns: var(--centerGrid--columns);

    & > * {
      grid-column: main;
    }
  }

  .test {
    margin-block: 2rem;
    display: flex;
    gap: 1rem;
    align-items: flex-start;
  }
</style>
