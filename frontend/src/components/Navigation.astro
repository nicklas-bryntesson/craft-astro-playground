---
interface Page {
  id: string;
  uri: string;
  title: string;
  children?: Page[];
}

const { currentPath, pages = [] } = Astro.props;

const isActiveOrChild = (pageUri: string) => {
  const cleanCurrentPath = currentPath.replace(/\/$/, '');
  const cleanPageUri = `/${pageUri}`.replace(/\/$/, '');
  return cleanCurrentPath === cleanPageUri || cleanCurrentPath.startsWith(cleanPageUri + '/');
};

const isActive = (uri: string) => currentPath === `/${uri}`;
---

<nav class="" aria-label="Primary">
  <ul class="">
    <li>
      <a 
        href="/blog" 
        aria-current={isActive('blog') ? 'page' : null}
      >
        Blog
      </a>
    </li>
    <li>
      <a 
        href="/guestbook" 
        aria-current={isActive('guestbook') ? 'page' : null}
      >
        Guestbook
      </a>
    </li>
    {pages.map((page: Page) => (
      <li>
        <a 
          href={`/${page.uri}`}
          aria-current={isActive(page.uri) ? 'page' : null}
        >
          {page.title}
        </a>
        {page.children && page.children.length > 0 && isActiveOrChild(page.uri) && (
          <ul>
            {page.children.map((child: Page) => (
              <li>
                <a 
                  href={`/${child.uri}`}
                  aria-current={isActive(child.uri) ? 'page' : null}
                >
                  {child.title}
                </a>
              </li>
            ))}
          </ul>
        )}
      </li>
    ))}
  </ul>
</nav>

<style>
nav {
  flex: 1;
}

nav > ul {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
  list-style: none;
  padding-inline-start: 0;
  margin-inline-end: 1rem;
}

nav > ul > li {
  display: inline-block;
}

nav > ul > li > a {
  padding-inline: 0.4rem;
  padding-block: 0.25rem;
  font-family: var(--fontFamily--heading);
  text-decoration: none;
  color: var(--body--color);

  &[aria-current="page"] {
    font-weight: bold;
  }
}
</style> 